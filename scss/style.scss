@import 'override';
@import 'mixin';



body {

    background: rgba(20,20,20,255);
}

#logo{

    width: 90px;
    height: 50px;
    margin-left: -10px;
}

.nav-item {


    list-style: none;
       a {
        

        .navRightImg {
            width: 30px;
            height: 30px;
        }
    }
}


.navRightImg{
    width: 30px;
    height: 30px;

}

#searchIcon {

    cursor: pointer;
}

footer {
   p {

    margin-top: 1em;
    margin-bottom: 1em;
    @include paramMixin(0.4em, normal);
   }

    i {
        margin-right: 0.5em;
      font-size: 1em; 
    }
  }



/* PAGINA 2 */

  #ombra{
    
    box-shadow: inset 0 50px 40px -10px rgba(0, 0, 0, 0.8); /* Stile dell'ombra interna */
}


// prove nuove fs

$fontSizes: (
    1: 2rem,
    2: 1.8rem,
    3: 1.6rem,
    4: 1.4rem,
    5: 1.2rem,
    6: 1rem
  );

  $newFontSizes: ();

@for $i from 7 through 12 {
  $newKey: $i;
  $baseSize: map-get($fontSizes, 6); //  valore di base da Bootstrap 
  $decrement: (7 - $i) * -0.1rem; // incremento negativo 
  $newValue: $baseSize - $decrement;
  $newFontSizes: map-merge($newFontSizes, ($newKey: $newValue));
}

// Output dei valori delle nuove dimensioni dei font
@each $key, $value in $newFontSizes {
  .fs-#{$key} {
    font-size: $value;
  }
}

